Speech recognition refers to the translation of spoken words into text. The common way to recognize speech is the following: we take waveform, split it on utterances by silences then try to recognize what's being said in each utterance. To do that we want to take all possible combinations of words and try to match them with the audio. We choose the best matching combination. (http://cmusphinx.sourceforge.net/wiki/tutorialconcepts)SD-VBS implements speech recognition using CMU Sphinx, an open source speech recognition system developed at Carnegie Mellon University. Specifically, SD-VBS implements the Pocketsphinx version of CMU Sphinx, which is a lightweight speech recognizer written in C (http://cmusphinx.sourceforge.net/wiki/tutorialoverview). SD-VBS creates the benchmark for only the recognizing step, not the training step. The recognizing algorithm utilizes Viterbi algorithm, Hidden Markov Model (HMM), and n-gram language model. The algorithm first translates utterances into possible words using Viterbi algorithm on a predetermined HMM. Then, the possible words are evaluated using a predetermined n-gram language model to find the most likely words combination. Viterbi algorithm is a computationally intensive dynamic programming algorithm, and evaluating the probabilities of words combinations using n-gram model also requires a lot of computations but not as much as running Viterbi algorithm. Both Viterbi algorithm and the process of finding the most likely words combination using n-gram model require a lot of array lookups on HMM parameters and n-gram parameters.